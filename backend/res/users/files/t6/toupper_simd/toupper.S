.intel_syntax noprefix
.global toupper_asm
.global toupper_asm_simd

.data

end_upper:      .byte 0x7b,0x7b,0x7b,0x7b,0x7b,0x7b,0x7b,0x7b,0x7b,0x7b,0x7b,0x7b,0x7b,0x7b,0x7b,0x7b
begin_lower:    .byte 0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60
diff:           .byte 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20

.text

// void toupper_<...>(char*);
toupper_asm:
    mov al,[rdi]
    cmp al,0                    // Branch to return if char is '\0'
    je .Lend
    sub al,'a'                  // Make 'a' => 0, 'b' => 1, ..., 'z' => 25.
    cmp al,25                   // Branch to cont if al is unsigned > 25.
    ja .Lcont                   // "Jump above", unsigned equivalent to jg
    sub byte ptr [rdi],0x20     // Transform letter to upper case
.Lcont:
    inc rdi
    jmp toupper_asm
.Lend:
    ret

toupper_asm_simd:
    //TODO
    jmp toupper_asm
